```json
{
  "Description": "This example changes the user protected range.",
  "OnlyOffice_JS": "// This example changes the user protected range.\nvar oWorksheet = Api.GetActiveSheet();\noWorksheet.AddProtectedRange(\"protectedRange\", \"$A$1:$B$1\").AddUser(\"userId\", \"name\", \"CanView\");\nvar protectedRange = oWorksheet.GetProtectedRange(\"protectedRange\");\nvar userInfo = protectedRange.GetUser(\"userId\");\nvar userId = userInfo.GetId();\noWorksheet.GetRange(\"A3\").SetValue(\"Id: \" + userId);",
  "Excel_VBA": "' This example changes the user protected range.\nDim oWorksheet As Worksheet\nSet oWorksheet = ActiveSheet\n\n' Add protected range by locking the cells\noWorksheet.Range(\"A1:B1\").Locked = True\n\n' Protect the worksheet to enforce the locked cells\noWorksheet.Protect Password:=\"\", UserInterfaceOnly:=True\n\n' Note: Excel VBA does not support adding users with specific permissions directly.\n' Additional logic would be required to manage user permissions.\n\n' Retrieve and set the user ID in cell A3\nDim userId As String\nuserId = \"userId\" ' Replace with actual user ID retrieval logic\n\noWorksheet.Range(\"A3\").Value = \"Id: \" & userId"
}
```