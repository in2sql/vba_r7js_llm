```json
{
  "table": {
    "headers": ["Description", "OnlyOffice JS", "Excel VBA"],
    "rows": [
      {
        "Description": "Get the active worksheet",
        "OnlyOffice JS": "var oWorksheet = Api.GetActiveSheet();",
        "Excel VBA": "Dim oWorksheet As Worksheet\nSet oWorksheet = ThisWorkbook.ActiveSheet"
      },
      {
        "Description": "Create a solid fill with RGB color (255, 111, 61)",
        "OnlyOffice JS": "var oFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 111, 61));",
        "Excel VBA": "Dim oFill As Object\nSet oFill = CreateSolidFill(RGB(255, 111, 61))"
      },
      {
        "Description": "Create a stroke with 0 width and no fill",
        "OnlyOffice JS": "var oStroke = Api.CreateStroke(0, Api.CreateNoFill());",
        "Excel VBA": "Dim oStroke As Object\nSet oStroke = CreateStroke(0, CreateNoFill())"
      },
      {
        "Description": "Add a shape to the worksheet with specified parameters",
        "OnlyOffice JS": "var oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);",
        "Excel VBA": "Dim oShape As Shape\nSet oShape = oWorksheet.Shapes.AddShape(msoShapeFlowchartProcess, 120 * 36000, 70 * 36000, 2 * 36000, 3 * 36000)\noShape.Fill.ForeColor.RGB = RGB(255, 111, 61)\noShape.Line.Visible = msoFalse"
      },
      {
        "Description": "Get the content of the shape",
        "OnlyOffice JS": "var oDocContent = oShape.GetContent();",
        "Excel VBA": "Dim oDocContent As TextRange\nSet oDocContent = oShape.TextFrame.TextRange"
      },
      {
        "Description": "Get the first paragraph from the content",
        "OnlyOffice JS": "var oParagraph = oDocContent.GetElement(0);",
        "Excel VBA": "Dim oParagraph As ParagraphFormat\nSet oParagraph = oDocContent.Paragraphs(1).ParagraphFormat"
      },
      {
        "Description": "Get paragraph properties",
        "OnlyOffice JS": "var oParaPr = oParagraph.GetParaPr();",
        "Excel VBA": "Dim oParaPr As ParagraphFormat\nSet oParaPr = oParagraph.ParagraphFormat"
      },
      {
        "Description": "Set spacing after the paragraph to 1440",
        "OnlyOffice JS": "oParaPr.SetSpacingAfter(1440);",
        "Excel VBA": "oParaPr.SpaceAfter = 1440"
      },
      {
        "Description": "Add text to the paragraph",
        "OnlyOffice JS": "oParagraph.AddText(\"This is an example of setting a space after a paragraph. \");",
        "Excel VBA": "oDocContent.Text = oDocContent.Text & \"This is an example of setting a space after a paragraph. \""
      },
      {
        "Description": "Get spacing after value of the paragraph",
        "OnlyOffice JS": "var nSpacingAfter = oParaPr.GetSpacingAfter();",
        "Excel VBA": "Dim nSpacingAfter As Long\nnSpacingAfter = oParaPr.SpaceAfter"
      },
      {
        "Description": "Create a new paragraph",
        "OnlyOffice JS": "oParagraph = Api.CreateParagraph();",
        "Excel VBA": "Set oParagraph = oDocContent.Paragraphs.Add"
      },
      {
        "Description": "Add text displaying the spacing after value",
        "OnlyOffice JS": "oParagraph.AddText(\"Spacing after : \" + nSpacingAfter);",
        "Excel VBA": "oParagraph.Text = \"Spacing after: \" & nSpacingAfter"
      },
      {
        "Description": "Append the new paragraph to the document content",
        "OnlyOffice JS": "oDocContent.Push(oParagraph);",
        "Excel VBA": "oDocContent.Paragraphs.Add oParagraph"
      }
    ]
  }
}
```