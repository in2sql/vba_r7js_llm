```json
{
  "Description": "This example shows how to get a paragraph element using the position specified.",
  "Code": {
    "OnlyOffice_JS": "// This example shows how to get a paragraph element using the position specified.\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 111, 61));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape(\"flowChartOnlineStorage\", 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText(\"This is the text for the first text run. Do not forget a space at its end to separate from the second one. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the second run. We will set it bold afterwards. It also needs space at its end. \");\noParagraph.AddElement(oRun);\noRun = Api.CreateRun();\noRun.AddText(\"This is the text for the third run. It ends the paragraph.\");\noParagraph.AddElement(oRun);\noRun = oParagraph.GetElement(2);\noRun.SetBold(true);",
    "VBA": "' This example shows how to get a paragraph element using the position specified.\nSub AddShapeAndModifyText()\n    Dim oWorksheet As Worksheet\n    Dim oShape As Shape\n    Dim oTextRange As TextRange2\n\n    ' Get active sheet\n    Set oWorksheet = ActiveSheet\n\n    ' Add shape (FlowChartOnlineStorage equivalent)\n    Set oShape = oWorksheet.Shapes.AddShape(msoShapeFlowchartOnlineStorage, _\n        120, 70, 150, 100) ' Adjust width and height as needed\n\n    ' Set fill color to RGB(255, 111, 61)\n    With oShape.Fill\n        .Visible = msoTrue\n        .Solid\n        .ForeColor.RGB = RGB(255, 111, 61)\n    End With\n\n    ' Remove line (stroke)\n    With oShape.Line\n        .Weight = 0\n        .Visible = msoFalse\n    End With\n\n    ' Access the text frame\n    Set oTextRange = oShape.TextFrame2.TextRange\n\n    ' Clear existing text\n    oTextRange.Text = ""\n\n    ' Add first run\n    oTextRange.Text = "This is the text for the first text run. Do not forget a space at its end to separate from the second one. "\n\n    ' Add second run\n    oTextRange.InsertAfter "This is the text for the second run. We will set it bold afterwards. It also needs space at its end. "\n\n    ' Add third run\n    oTextRange.InsertAfter "This is the text for the third run. It ends the paragraph."\n\n    ' Set the third run to bold\n    ' Calculate the start position of the third run\n    Dim firstRunLength As Long\n    Dim secondRunLength As Long\n    Dim thirdRunStart As Long\n    firstRunLength = Len("This is the text for the first text run. Do not forget a space at its end to separate from the second one. ")\n    secondRunLength = Len("This is the text for the second run. We will set it bold afterwards. It also needs space at its end. ")\n    thirdRunStart = firstRunLength + secondRunLength + 1 ' +1 for space\n    oTextRange.Characters(thirdRunStart, Len("This is the text for the third run. It ends the paragraph.")).Font.Bold = msoTrue\nEnd Sub"
  }
}
```