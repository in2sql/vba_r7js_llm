```json
{
  "description": "This example demonstrates how to retrieve the number of elements in the current paragraph by adding a shape, manipulating its content, and displaying element counts before and after adding a text run.",
  "OnlyOffice_JS": "// This example shows how to get a number of elements in the current paragraph.\nvar oWorksheet = Api.GetActiveSheet();\nvar oFill = Api.CreateSolidFill(Api.CreateRGBColor(255, 111, 61));\nvar oStroke = Api.CreateStroke(0, Api.CreateNoFill());\nvar oShape = oWorksheet.AddShape('flowChartOnlineStorage', 120 * 36000, 70 * 36000, oFill, oStroke, 0, 2 * 36000, 0, 3 * 36000);\nvar oDocContent = oShape.GetContent();\nvar oParagraph = oDocContent.GetElement(0);\noParagraph.RemoveAllElements();\nvar oRun = Api.CreateRun();\noRun.AddText('Number of paragraph elements at this point: ');\noRun.AddTabStop();\noRun.AddText('' + oParagraph.GetElementsCount());\noRun.AddLineBreak();\noParagraph.AddElement(oRun);\noRun.AddText('Number of paragraph elements after we added a text run: ');\noRun.AddTabStop();\noRun.AddText('' + oParagraph.GetElementsCount());",
  "Excel_VBA": "' This example shows how to get a number of elements in the current paragraph.\nSub Example()\n    Dim oWorksheet As Worksheet\n    Set oWorksheet = ActiveSheet\n\n    ' Create a solid fill color (requires custom function)\n    Dim oFill As Object\n    Set oFill = CreateSolidFill(RGB(255, 111, 61))\n\n    ' Create a stroke with no fill (requires custom function)\n    Dim oStroke As Object\n    Set oStroke = CreateStroke(0, Nothing)\n\n    ' Add a shape to the worksheet\n    Dim oShape As Shape\n    Set oShape = oWorksheet.Shapes.AddShape(msoShapeFlowchartOnlineStorage, 120, 70, 200, 100)\n\n    ' Get the text content of the shape\n    Dim oDocContent As TextRange\n    Set oDocContent = oShape.TextFrame.TextRange\n\n    ' Clear existing text\n    oDocContent.Text = ""\n\n    ' Add initial text run\n    oDocContent.Text = "Number of paragraph elements at this point: " & oDocContent.Characters.Count\n    oDocContent.Text = oDocContent.Text & vbTab & oDocContent.Characters.Count & vbCrLf\n\n    ' Add second text run\n    oDocContent.Text = oDocContent.Text & "Number of paragraph elements after we added a text run: " & oDocContent.Characters.Count\nEnd Sub\n\n' Note: VBA does not have direct equivalents for some OnlyOffice API methods. Custom functions like CreateSolidFill and CreateStroke need to be implemented as needed."
}
```