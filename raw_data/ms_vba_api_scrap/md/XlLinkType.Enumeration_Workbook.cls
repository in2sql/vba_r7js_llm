VERSION 1.0 CLASS
BEGIN
MultiUse = -1  'True
END
Attribute VB_Name = "Workbook"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = False
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False

Property Get AccuracyVersion() As Long
End Property
Property Let AccuracyVersion()
End Property

Property Get ActiveChart() As Chart
End Property

Property Get ActiveSheet() As Worksheet
End Property

Property Get ActiveSlicer() As Slicer
End Property

Property Get Application() As Application
End Property

Property Get AutoUpdateFrequency() As Long
End Property
Property Let AutoUpdateFrequency()
End Property

Property Get AutoUpdateSaveChanges() As Boolean
End Property
Property Let AutoUpdateSaveChanges()
End Property

Property Get BuiltinDocumentProperties() As Object
End Property

Property Get CalculationVersion() As Long
End Property

Property Get CaseSensitive() As Boolean
End Property

Property Get ChangeHistoryDuration() As Long
End Property
Property Let ChangeHistoryDuration()
End Property

Property Get ChartDataPointTrack() As Boolean
End Property
Property Let ChartDataPointTrack()
End Property

Property Get Charts() As Sheets
End Property

Property Get CheckCompatibility() As Boolean
End Property
Property Let CheckCompatibility()
End Property

Property Get CodeName() As String
End Property

Property Get Colors(Optional Index)
End Property
Property Get Colors()
End Property

Property Get CommandBars() As CommandBars
End Property

Property Get ConflictResolution() As XlSaveConflictResolution
End Property
Property Let ConflictResolution()
End Property

Property Get Connections() As Connections
End Property

Property Get ConnectionsDisabled() As Boolean
End Property

Property Get Container() As Object
End Property

Property Get ContentTypeProperties() As MetaProperties
End Property

Property Get CreateBackup() As Boolean
End Property

Property Get Creator() As XlCreator
End Property

Property Get CustomDocumentProperties() As Object
End Property

Property Get CustomViews() As CustomViews
End Property

Property Get CustomXMLParts() As CustomXMLParts
End Property

Property Get Date1904() As Boolean
End Property
Property Let Date1904()
End Property

Property Get DefaultPivotTableStyle() As Variant
End Property
Property Let DefaultPivotTableStyle()
End Property

Property Get DefaultSlicerStyle() As Variant
End Property
Property Let DefaultSlicerStyle()
End Property

Property Get DefaultTableStyle() As Variant
End Property
Property Let DefaultTableStyle()
End Property

Property Get DefaultTimelineStyle() As Variant
End Property
Property Let DefaultTimelineStyle()
End Property

Property Get DisplayDrawingObjects() As XlDisplayDrawingObjects
End Property
Property Let DisplayDrawingObjects()
End Property

Property Get DisplayInkComments() As Boolean
End Property
Property Let DisplayInkComments()
End Property

Property Get DocumentInspectors() As DocumentInspectors
End Property

Property Get DocumentLibraryVersions() As DocumentLibraryVersions
End Property

Property Get DoNotPromptForConvert() As Boolean
End Property
Property Let DoNotPromptForConvert()
End Property

Property Get EnableAutoRecover() As Boolean
End Property
Property Let EnableAutoRecover()
End Property

Property Get EncryptionProvider() As String
End Property
Property Let EncryptionProvider()
End Property

Property Get EnvelopeVisible() As Boolean
End Property
Property Let EnvelopeVisible()
End Property

Property Get Excel4IntlMacroSheets() As Sheets
End Property

Property Get Excel4MacroSheets() As Sheets
End Property

Property Get Excel8CompatibilityMode() As Boolean
End Property

Property Get FileFormat() As XlFileFormat
End Property

Property Get Final() As Boolean
End Property
Property Let Final()
End Property

Property Get ForceFullCalculation() As Boolean
End Property

Property Get FullName() As String
End Property

Property Get FullNameURLEncoded() As String
End Property

Property Get HasPassword() As Boolean
End Property

Property Get HasVBProject() As Boolean
End Property

Property Get HighlightChangesOnScreen() As Boolean
End Property

Property Get IconSets() As IconSets
End Property

Property Get InactiveListBorderVisible() As Boolean
End Property
Property Let InactiveListBorderVisible()
End Property

Property Get IsAddin() As Boolean
End Property
Property Let IsAddin()
End Property

Property Get IsInplace() As Boolean
End Property

Property Get KeepChangeHistory() As Boolean
End Property
Property Let KeepChangeHistory()
End Property

Property Get ListChangesOnNewSheet() As Boolean
End Property
Property Let ListChangesOnNewSheet()
End Property

Property Get Mailer() As Mailer
End Property

Property Get Model() As Model
End Property

Property Get MultiUserEditing() As Boolean
End Property

Property Get Name() As String
End Property

Property Get Names() As Names
End Property

Property Get Parent() As Object
End Property

Property Get Password() As String
End Property
Property Let Password()
End Property

Property Get PasswordEncryptionAlgorithm() As String
End Property

Property Get PasswordEncryptionFileProperties() As Boolean
End Property

Property Get PasswordEncryptionKeyLength() As Long
End Property

Property Get PasswordEncryptionProvider() As String
End Property

Property Get Path() As String
End Property

Property Get Permission() As Permission
End Property

Property Get PersonalViewListSettings() As Boolean
End Property
Property Let PersonalViewListSettings()
End Property

Property Get PersonalViewPrintSettings() As Boolean
End Property
Property Let PersonalViewPrintSettings()
End Property

Property Get PivotTables() As Object
End Property

Property Get PrecisionAsDisplayed() As Boolean
End Property
Property Let PrecisionAsDisplayed()
End Property

Property Get ProtectStructure() As Boolean
End Property

Property Get ProtectWindows() As Boolean
End Property

Property Get PublishObjects() As PublishObjects
End Property

Property Get Queries() As Queries
End Property

Property Get ReadOnly() As Boolean
End Property

Property Get ReadOnlyRecommended() As Boolean
End Property
Property Let ReadOnlyRecommended()
End Property

Property Get RemovePersonalInformation() As Boolean
End Property
Property Let RemovePersonalInformation()
End Property

Property Get Research() As Research
End Property

Property Get RevisionNumber() As Long
End Property

Property Get Saved() As Boolean
End Property
Property Let Saved()
End Property

Property Get SaveLinkValues() As Boolean
End Property
Property Let SaveLinkValues()
End Property

Property Get ServerPolicy() As ServerPolicy
End Property

Property Get ServerViewableItems() As ServerViewableItems
End Property

Property Get SharedWorkspace() As SharedWorkspace
End Property

Property Get Sheets() As Sheets
End Property

Property Get ShowConflictHistory() As Boolean
End Property
Property Let ShowConflictHistory()
End Property

Property Get ShowPivotChartActiveFields() As Boolean
End Property
Property Let ShowPivotChartActiveFields()
End Property

Property Get ShowPivotTableFieldList() As Boolean
End Property
Property Let ShowPivotTableFieldList()
End Property

Property Get Signatures() As SignatureSet
End Property

Property Get SlicerCaches() As SlicerCaches
End Property

Property Get SmartDocument() As SmartDocument
End Property

Property Get Styles() As Styles
End Property

Property Get Sync() As Sync
End Property

Property Get TableStyles() As TableStyles
End Property

Property Get TemplateRemoveExtData() As Boolean
End Property
Property Let TemplateRemoveExtData()
End Property

Property Get Theme() As OfficeTheme
End Property

Property Get UpdateLinks() As XlUpdateLinks
End Property
Property Let UpdateLinks()
End Property

Property Get UpdateRemoteReferences() As Boolean
End Property
Property Let UpdateRemoteReferences()
End Property

Property Get UserStatus() As Variant
End Property

Property Get UseWholeCellCriteria() As Boolean
End Property

Property Get UseWildcards() As Boolean
End Property

Property Get VBASigned() As Boolean
End Property

Property Get VBProject() As VBProject
End Property

Property Get WebOptions() As WebOptions
End Property

Property Get Windows() As Windows
End Property

Property Get Worksheets() As Sheets
End Property

Property Get WritePassword() As String
End Property
Property Let WritePassword()
End Property

Property Get WriteReserved() As Boolean
End Property

Property Get WriteReservedBy() As String
End Property

Property Get XmlMaps() As XmlMaps
End Property

Property Get XmlNamespaces() As XmlNamespaces
End Property

Sub AcceptAllChanges(Optional When, Optional Who, Optional Where)
End Sub

Sub Activate()
End Sub

Sub AddToFavorites()
End Sub

Sub ApplyTheme(Filename As String)
End Sub

Sub BreakLink(Name As String, Type As XlLinkType)
End Sub

Function CanCheckIn() As Boolean
End Function

Sub ChangeFileAccess(Mode As XlFileAccess, Optional WritePassword, Optional Notify)
End Sub

Sub ChangeLink(Name As String, NewName As String, Optional Type As XlLinkType = xlLinkTypeExcelLinks)
End Sub

Sub CheckIn(Optional SaveChanges, Optional Comments, Optional MakePublic)
End Sub

Sub CheckInWithVersion(Optional SaveChanges, Optional Comments, Optional MakePublic, Optional VersionType)
End Sub

Sub Close(Optional SaveChanges, Optional Filename, Optional RouteWorkbook)
End Sub

' Sub CreateForecastSheet(Timeline As Range, Values As Range, Optional ForecastStart, Optional ForecastEnd, Optional ConfInt, Optional Seasonality, Optional DataCompletion, Optional Aggregation, Optional ChartType, Optional 
' End Sub

' Sub DeleteNumberFormat(NumberFormat As 
' End Sub

Sub EnableConnections()
End Sub

Sub EndReview()
End Sub

Function ExclusiveAccess() As Boolean
End Function

Sub ExportAsFixedFormat(Type As XlFixedFormatType, Optional Filename, Optional Quality, Optional IncludeDocProperties, Optional IgnorePrintAreas, Optional From, Optional To, Optional OpenAfterPublish, Optional FixedFormatExtClassPtr)
End Sub

Sub FollowHyperlink(Address As String, Optional SubAddress, Optional NewWindow, Optional AddHistory, Optional ExtraInfo, Optional Method, Optional HeaderInfo)
End Sub

Sub ForwardMailer()
End Sub

Function GetWorkflowTasks() As WorkflowTasks
End Function

Function GetWorkflowTemplates() As WorkflowTemplates
End Function

Sub HighlightChangesOptions(Optional When, Optional Who, Optional Where)
End Sub

Function LinkInfo(Name As String, LinkInfo As XlLinkInfo, Optional Type, Optional EditionRef)
End Function

Function LinkSources(Optional Type)
End Function

Sub LockServerFile()
End Sub

Sub MergeWorkbook(Filename)
End Sub

Function NewWindow() As Window
End Function

Sub OpenLinks(Name As String, Optional ReadOnly, Optional Type)
End Sub

Function PivotCaches() As PivotCaches
End Function

Sub Post(Optional DestName)
End Sub

Sub PrintOut(Optional From, Optional To, Optional Copies, Optional Preview, Optional ActivePrinter, Optional PrintToFile, Optional Collate, Optional PrToFileName, Optional IgnorePrintAreas)
End Sub

Sub PrintPreview(Optional EnableChanges)
End Sub

Sub Protect(Optional Password, Optional Structure, Optional Windows)
End Sub

Sub ProtectSharing(Optional Filename, Optional Password, Optional WriteResPassword, Optional ReadOnlyRecommended, Optional CreateBackup, Optional SharingPassword, Optional FileFormat)
End Sub

Sub PurgeChangeHistoryNow(Days As Long, Optional SharingPassword)
End Sub

Sub RefreshAll()
End Sub

Sub RejectAllChanges(Optional When, Optional Who, Optional Where)
End Sub

Sub ReloadAs(Encoding As MsoEncoding)
End Sub

Sub RemoveDocumentInformation(RemoveDocInfoType As XlRemoveDocInfoType)
End Sub

Sub RemoveUser(Index As Long)
End Sub

Sub Reply()
End Sub

Sub ReplyAll()
End Sub

Sub ReplyWithChanges(Optional ShowMessage)
End Sub

Sub ResetColors()
End Sub

Sub RunAutoMacros(Which As XlRunAutoMacro)
End Sub

Sub Save()
End Sub

Sub SaveAs(Optional Filename, Optional FileFormat, Optional Password, Optional WriteResPassword, Optional ReadOnlyRecommended, Optional CreateBackup, Optional AccessMode As XlSaveAsAccessMode = xlNoChange, Optional ConflictResolution, Optional AddToMru, Optional TextCodepage, Optional TextVisualLayout, Optional Local)
End Sub

Sub SaveAsXMLData(Filename As String, Map As XmlMap)
End Sub

Sub SaveCopyAs(Optional Filename)
End Sub

Sub SendFaxOverInternet(Optional Recipients, Optional Subject, Optional ShowMessage)
End Sub

Sub SendForReview(Optional Recipients, Optional Subject, Optional ShowMessage, Optional IncludeAttachment)
End Sub

Sub SendMail(Recipients, Optional Subject, Optional ReturnReceipt)
End Sub

Sub SendMailer(Optional FileFormat, Optional Priority As XlPriority = xlPriorityNormal)
End Sub

Sub SetLinkOnData(Name As String, Optional Procedure)
End Sub

Sub SetPasswordEncryptionOptions(Optional PasswordEncryptionProvider, Optional PasswordEncryptionAlgorithm, Optional PasswordEncryptionKeyLength, Optional PasswordEncryptionFileProperties)
End Sub

Sub ToggleFormsDesign()
End Sub

Sub Unprotect(Optional Password)
End Sub

Sub UnprotectSharing(Optional SharingPassword)
End Sub

Sub UpdateFromFile()
End Sub

Sub UpdateLink(Optional Name, Optional Type)
End Sub

Sub WebPagePreview()
End Sub

Function XmlImport(Url As String, ImportMap As XmlMap, Optional Overwrite, Optional Destination) As XlXmlImportResult
End Function

Function XmlImportXml(Data As String, ImportMap As XmlMap, Optional Overwrite, Optional Destination) As XlXmlImportResult
End Function